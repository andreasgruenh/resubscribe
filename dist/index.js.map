{"version":3,"file":"index.js","sources":["../src/internal/types.ts","../src/internal/subscribe.ts","../src/Subscribe.tsx"],"sourcesContent":["import {Observable} from './Observable'\n\n/**\n * Something that can be subscribed to.\n */\ntype Subscribable<T> = Observable<T> | Promise<T> | AsyncIterator<T> | T\n\n/**\n * A subscription than can be unsubscribed from.\n */\ninterface Subscription {\n  unsubscribe(): void\n}\n\nnamespace Subscription {\n  /**\n   * An empty subscription.\n   */\n  export const EMPTY: Subscription = {unsubscribe: () => {}}\n}\n\n/**\n * Handles subscription events.\n */\ninterface Subscriber<T> {\n  next(value: T): void\n  error(err: any): void\n  complete(): void\n}\n\nexport {Subscribable, Subscriber, Subscription}\n","import {Observable} from './Observable'\nimport {Subscribable, Subscriber, Subscription} from './types'\n\n/**\n * Subscribe something that can be subscribed to into a unified interface.\n */\nfunction subscribe<T>(source: Subscribable<T>, subscriber: Subscriber<T>): Subscription {\n  if (isObservable(source)) return subscribeToObservable(source, subscriber)\n  if (isPromise(source)) return subscribeToPromise(source, subscriber)\n  if (isAsyncIterator(source)) return subscribeToAsyncIterator(source, subscriber)\n  return subscribeToValue(source, subscriber)\n}\n\nfunction isObservable<T>(source: Subscribable<T>): source is Observable<T> {\n  return (\n    true &&\n    !!source &&\n    typeof source === 'object' &&\n    typeof (source as any).subscribe === 'function'\n  )\n}\n\nfunction subscribeToObservable<T>(\n  observable: Observable<T>,\n  subscriber: Subscriber<T>,\n): Subscription {\n  const subscription = observable.subscribe(subscriber)\n  const unsubscribe = () => subscription.unsubscribe()\n  return {unsubscribe}\n}\n\nfunction isPromise<T>(subscribable: Subscribable<T>): subscribable is Promise<T> {\n  return (\n    true &&\n    !!subscribable &&\n    typeof subscribable === 'object' &&\n    typeof (subscribable as any).then === 'function'\n  )\n}\n\nfunction subscribeToPromise<T>(promise: Promise<T>, subscriber: Subscriber<T>): Subscription {\n  promise.then(value => {\n    subscriber.next(value)\n    subscriber.complete()\n  }, subscriber.error)\n  return Subscription.EMPTY // Promises are not cancellable ):\n}\n\nfunction isAsyncIterator<T>(subscribable: Subscribable<T>): subscribable is AsyncIterator<T> {\n  return (\n    true &&\n    !!subscribable &&\n    typeof subscribable === 'object' &&\n    typeof (subscribable as any).next === 'function'\n  )\n}\n\nfunction subscribeToAsyncIterator<T>(\n  asyncIterator: AsyncIterator<T>,\n  subscriber: Subscriber<T>,\n): Subscription {\n  fetchNext()\n  return {unsubscribe}\n\n  async function fetchNext() {\n    let result\n    try {\n      result = await asyncIterator.next()\n    } catch (err) {\n      subscriber.error(err)\n      return\n    }\n\n    if (result.done) {\n      subscriber.complete()\n      return\n    }\n\n    fetchNext()\n    subscriber.next(result.value)\n  }\n\n  function unsubscribe() {\n    if (asyncIterator.return) asyncIterator.return()\n  }\n}\n\nfunction subscribeToValue<T>(value: T, subscriber: Subscriber<T>): Subscription {\n  subscriber.next(value)\n  subscriber.complete()\n  return Subscription.EMPTY // value is delivered immediately\n}\n\nexport {subscribe}\n","import * as PropTypes from 'prop-types'\nimport {PureComponent, ReactNode} from 'react'\n\nimport {subscribe} from './internal/subscribe'\nimport {Subscribable, Subscription} from './internal/types'\n\n/**\n * Subscribes to a source and asynchronously renders content as soon as a value is available.\n */\nclass Subscribe<T> extends PureComponent<SubscribeProps<T>, SubscribeState<T>> {\n  static readonly displayName = 'Subscribe'\n  static readonly propTypes = {\n    children: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.shape({\n        loading: PropTypes.func,\n        next: PropTypes.func,\n        error: PropTypes.func,\n      }),\n    ]),\n    placeholder: PropTypes.node,\n    to: PropTypes.any.isRequired,\n  }\n\n  private renderer: SubscribeRenderer<T>\n  private subscription: Subscription = Subscription.EMPTY\n\n  constructor(props: SubscribeProps<T>) {\n    super(props)\n    this.renderer = this.createRenderer(props.children)\n    this.state = {kind: 'loading'}\n  }\n\n  componentDidMount(): void {\n    this.subscribe(this.props.to)\n  }\n\n  componentWillReceiveProps(nextProps: Readonly<SubscribeProps<T>>): void {\n    if ('children' in nextProps) {\n      this.renderer = this.createRenderer(nextProps.children)\n    }\n    if ('to' in nextProps && nextProps.to !== this.props.to) {\n      this.subscribe(nextProps.to)\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.subscription.unsubscribe()\n  }\n\n  private createRenderer<T>(children: SubscribeProps<T>['children']): SubscribeRenderer<T> {\n    const renderer: SubscribeRenderer<T> = {\n      loading: () => this.props.placeholder || null,\n      next: value => value,\n      error: () => null,\n    }\n    if (!children) return renderer\n    if (typeof children === 'function') {\n      renderer.next = children\n    } else {\n      Object.assign(renderer, children)\n    }\n    return renderer\n  }\n\n  private subscribe(to: Subscribable<T>): void {\n    this.setState({kind: 'loading'})\n    this.subscription.unsubscribe()\n    this.subscription = subscribe(to, {\n      next: value => this.setState({kind: 'next', value}),\n      error: err => this.setState({kind: 'error', err}),\n      complete: () => {},\n    })\n  }\n\n  render() {\n    switch (this.state.kind) {\n      case 'loading':\n        return this.renderer.loading()\n      case 'next':\n        return this.renderer.next(this.state.value)\n      case 'error':\n        return this.renderer.error(this.state.err)\n    }\n  }\n}\n\n/**\n * Renders asynchronously obtained values.\n */\ninterface SubscribeRenderer<T> {\n  /**\n   * Render the loading state, i.e. no value has been obtained yet.\n   * Defaults to `() => this.props.placeholder || null` when missing.\n   */\n  loading(): ReactNode\n\n  /**\n   * Render the next value.\n   * Defaults to `value => value` when missing.\n   */\n  next(value: T): ReactNode\n\n  /**\n   * Render an error.\n   * Defaults to `() => null` when missing.\n   */\n  error(err: any): ReactNode\n}\n\ninterface SubscribeProps<T> {\n  /**\n   * Renders the asynchronously obtained value.\n   */\n  children?: SubscribeRenderer<T>['next'] | Partial<SubscribeRenderer<T>>\n\n  /**\n   * The placeholder to be rendered if no loading-renderer is specified.\n   */\n  placeholder?: ReactNode\n\n  /**\n   * The source to subscribe to.\n   */\n  to: Subscribable<T>\n}\n\ntype SubscribeState<T> = {kind: 'loading'} | {kind: 'next'; value: T} | {kind: 'error'; err: any}\n\nexport {Subscribe, SubscribeProps, SubscribeRenderer, SubscribeState}\n"],"names":["PureComponent","PropTypes.oneOfType","PropTypes.func","PropTypes.shape","PropTypes.node","PropTypes.any"],"mappings":"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"}